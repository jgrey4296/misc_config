/*
   Project {{cookiecutter.proj_name}}

   Gradle build file for JaCaMo Applications
   October 21, 2022 - 18:34:15
*/


plugins {
    id "java"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

repositories {
    maven { url "https://raw.githubusercontent.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases" }

    //maven { url "http://jacamo.sourceforge.net/maven2" }
    //maven { url "https://jade.tilab.com/maven/" }

    flatDir { dirs 'lib' }

    mavenCentral()
}

dependencies {
    implementation('org.jacamo:jacamo:1.1')
}

sourceSets {
    main {
        java {
            srcDir '{{cookiecutter.pro_name}}/environment'
            srcDir '{{cookiecutter.pro_name}}/agents'
            srcDir '{{cookiecutter.pro_name}}/organisation'
            srcDir '{{cookiecutter.pro_name}}/int'
        }
        resources {
            srcDir '{{cookiecutter.pro_name}}/__data'
        }
    }
}

task run (type: JavaExec) {
    dependsOn   'classes'
    group       'JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
        mkdir 'log'
    }
    mainClass = 'jacamo.infra.JaCaMoLauncher'
    args('{{cookiecutter.proj_name}}.jcm', '--log-conf', './{{cookiecutter.proj_name}}/__configs/gui-log.properties')
    classpath sourceSets.main.runtimeClasspath
}

task cli (type: JavaExec) {
    dependsOn  'classes'
    group       ' JaCaMo'
    description 'runs the JaCaMo application'
    doFirst {
        mkdir 'log'
    }
    mainClass = 'jacamo.infra.JaCaMoLauncher'
    args('{{cookiecutter.proj_name}}.jcm', '--log-conf', './{{cookiecutter.proj_name}}/__configs/cli-log.properties')
    classpath sourceSets.main.runtimeClasspath
}


task uberJar(type: Jar) {
    dependsOn  'classes'
    group      ' JaCaMo'
    description 'creates a single runnable jar file with all dependencies'
    duplicatesStrategy 'exclude'

    manifest {
        attributes 'Main-Class': 'jacamo.infra.JaCaMoLauncher'
    }
    // the name must start with jacamo so that jacamo...jar is found in the classpath:
    archiveBaseName = 'jacamo-{{cookiecutter.proj_name}}'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    from (project.projectDir.absolutePath) {
        include '**/*.asl'
        include '**/*.xml'
        include '**/*.sai'
        include '**/*.ptl'
        include '**/*.jcm'
        include '*.properties'
    }
    from (project.buildDir.absolutePath + '/jcm') {
        include '**/*'
    }
    with jar

    doFirst {
        copy {
            from '{{cookiecutter.proj_name}}.jcm'
            rename '{{cookiecutter.proj_name}}.jcm','default.jcm'
            into project.buildDir.absolutePath + '/jcm'
        }
    }
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
