#+TITLE: Rust Package Reference

* Overview
https://crates.io/

https://doc.rust-lang.org/book/
https://doc.rust-lang.org/rust-by-example/index.html
https://doc.rust-lang.org/stable/rust-by-example/index.html
https://docs.rust-embedded.org/book/interoperability/c-with-rust.html
https://doc.rust-lang.org/edition-guide/index.html
https://doc.rust-lang.org/rustc/index.html
https://rustc-dev-guide.rust-lang.org/about-this-guide.html
https://doc.rust-lang.org/error_codes/error-index.html
* Main

** Stdlib
https://doc.rust-lang.org/std/index.html

*** alloc

*** any

*** arch

*** array

*** ascii

*** backtrace

*** borrow

*** boxed

*** cell

*** char

*** clone

*** cmp

*** collections

*** convert

*** default

*** env

*** error

*** f32

*** f64

*** ffi

*** fmt

*** fs

*** future

*** hash

*** hint

*** io

*** iter

*** marker

*** mem

*** net

*** num

*** ops

*** option

*** os

*** panic

*** path

*** pin

*** prelude

*** primitive

*** process

*** ptr

*** rc

*** result

*** slice

*** str

*** string

*** sync

*** task

*** thread

*** time

*** vec

** RustDoc
https://doc.rust-lang.org/rustdoc/index.html
** Cargo
https://doc.rust-lang.org/cargo/
** Cargo Crates

*** Logging
https://docs.rs/fern/latest/fern/
https://docs.rs/log/latest/log/
https://github.com/borntyping/rust-simple_logger
https://docs.rs/slog/latest/slog/
https://docs.rs/tokio/latest/tokio/

*** Documentation
https://docs.rs/crate/cargo-sphinx/latest
https://github.com/flamegraph-rs/flamegraph
https://github.com/kbknapp/cargo-graph

*** Utils
https://docs.rs/anyhow/latest/anyhow/
https://dylanede.github.io/cassowary-rs/cassowary/index.html
https://crates.io/crates/fp-core
https://docs.rs/itertools/latest/itertools/
https://docs.rs/proptest/latest/proptest/
https://docs.rs/parry2d/latest/parry2d/
https://parry.rs/docs/user_guide/getting_started
https://docs.rs/parry3d/latest/parry3d/
https://github.com/amethyst/bracket-lib
https://crates.io/crates/cargo-rr
https://sagiegurari.github.io/cargo-make/

https://github.com/jamesmunns/tomlq
https://crates.io/crates/tomato-toml
https://github.com/ceejbot/tomato

*** Data Structs
https://docs.rs/bitflags/latest/bitflags/
https://docs.rs/csv/latest/csv/
https://docs.rs/diesel/latest/diesel/
https://github.com/neo4j-labs/graph
https://docs.rs/humantime/latest/humantime/
https://docs.rs/json/latest/json/
https://docs.rs/jsonrpc/latest/jsonrpc/
https://docs.rs/nom-bibtex/latest/nom_bibtex/
https://docs.rs/prettyplease/latest/prettyplease/
https://docs.rs/quick-xml/latest/quick_xml/
https://docs.rs/rand/latest/rand/
https://docs.rs/rusqlite/latest/rusqlite/
https://docs.rs/semver/latest/semver/
https://docs.rs/serde/latest/serde/
https://docs.rs/serde_json/latest/serde_json/
https://docs.rs/tempfile/latest/tempfile/
https://time-rs.github.io/api/time/
https://time-rs.github.io/book/
https://docs.rs/uuid/latest/uuid/
https://docs.rs/xml-rs/latest/xml/
https://docs.rs/euclid/latest/euclid/
https://docs.rs/cgmath/latest/cgmath/
https://docs.rs/natural_constants/latest/natural_constants/
https://github.com/pistondevelopers/vecmath

*** Parsing
https://docs.rs/nom/latest/nom/
https://docs.rs/pest/latest/pest/
https://docs.rs/regex/latest/regex/
https://docs.rs/syn/latest/syn/
https://docs.rs/textwrap/latest/textwrap/


*** CLI
https://docs.rs/clap/latest/clap/

*** HTTP
https://docs.rs/actix/latest/actix/
https://docs.rs/hyper/latest/hyper/
https://docs.rs/lspower/latest/lspower/
https://docs.rs/reqwest/latest/reqwest/
https://github.com/crossbeam-rs/crossbeam
https://docs.rs/scopeguard/latest/scopeguard/

*** Sync
https://docs.rs/futures/latest/futures/
https://docs.rs/parking_lot/latest/parking_lot/
https://docs.rs/parking_lot_core/latest/parking_lot_core/
https://docs.rs/lock_api/latest/lock_api/

*** Graphical
https://github.com/emilk/egui
https://gtk-rs.org/gtk3-rs/stable/latest/docs/gtk/
https://docs.rs/iced/latest/iced/
https://docs.rs/image/latest/image/
https://github.com/plotters-rs/plotters
https://rust-sdl2.github.io/rust-sdl2/sdl2/

*** FFI
https://docs.rs/cc/latest/cc/
https://dgrunwald.github.io/rust-cpython/doc/cpython/
https://docs.rs/crate/gdnative/latest
https://docs.rs/libc/latest/libc/
https://docs.rs/libloading/latest/libloading/
https://docs.rs/numpy/latest/numpy/
https://docs.rs/crate/pyo3/latest
https://docs.rs/crate/pyo3-asyncio/latest
https://github.com/rusterlium/rustler

*** Dev Tools
https://rust-lang.github.io/rust-clippy/
https://github.com/rust-lang/rust-clippy
https://docs.rs/rustfix/latest/rustfix/
https://github.com/rust-lang/rustfmt
https://rust-lang.github.io/rustfmt/?version=v1.6.0&search=

*** Emacs
https://ubolonton.github.io/emacs-module-rs/latest/
https://github.com/ubolonton/emacs-module-rs
https://crates.io/crates/emacs-rs-module
https://github.com/ubolonton/emacs-module-rs

* Links

http://cantrip.org/rust-vs-c++.html

http://diobla.info/blog-archive/modules-tut.html

http://www.garin.io/rust-vs-c-pitfalls

https://anexen.github.io/pyxirr/

https://blog.logrocket.com/debugging-rust-apps-with-gdb/

https://blog.m-ou.se/super-let/

https://codeburst.io/how-to-use-rust-to-extend-python-360174ee5819?gi=f1a56fa91873

https://crates.io/crates/cargo-make#installation

https://dev.to/xs/setting-up-rust-on-macos-in-a-clean-way-13d1

https://docs.rs/emacs/latest/emacs/

https://docs.rs/rustler/latest/rustler/

https://faultlore.com/blah/rust-layouts-and-abis/

https://faultlore.com/blah/swift-abi/

https://faultlore.com/cargo-mommy/

https://federicoterzi.com/blog/12-rust-tips-and-tricks-you-might-not-know-yet/

https://fly.io/phoenix-files/elixir-and-rust-is-a-good-mix/

https://github.com/EbTech/rust-algorithms

https://github.com/Geal/nom

https://github.com/PyO3/pyo3

https://github.com/PyO3/setuptools-rust

https://github.com/Wilfred/remacs

https://github.com/andelf/rust-erlang-driver

https://github.com/chevyray/rust-gamedev

https://github.com/citybound/citybound

https://github.com/garkimasera/rusted-ruins

https://github.com/godot-rust/godot-rust

https://github.com/jkitchin/emacs-modules

https://github.com/rust-lang/rust/issues/33062

https://github.com/rust-unofficial/awesome-rust

https://github.com/rust-unofficial/patterns

https://github.com/sagiegurari/cargo-make

https://github.com/sile/erl_dist

https://github.com/typst/typst

https://github.com/ubolonton/emacs-module-rs

https://godot-rust.github.io/book/getting-started.html

https://godot-rust.github.io/book/index.html

https://hambly.dev/rust-nifs-in-elixir

https://hermanradtke.com/2016/08/08/introduction-to-nom-rust-parsing-combinator-framework.html/

https://immunant.com/blog/2019/12/header_merging/

https://juliareda.eu/2017/09/when-filters-fail/

https://just.systems/man/en/chapter_1.html

https://jvns.ca/

https://jvns.ca/blog/2022/12/02/a-couple-of-rust-error-messages/

https://lucumr.pocoo.org/2015/5/27/rust-for-pythonistas/

https://medium.com/@still-key6292/21-rust-questions-in-21-days-cac1e1fd6a2b

https://nnethercote.github.io/perf-book/title-page.html

https://pascalhertleif.de/artikel/good-practices-for-writing-rust-libraries/

https://phst.eu/emacs-modules.html

https://riptutorial.com/rust/example/5933/passing-lambdas-around

https://rust-lang.github.io/mdBook/

https://rust-lang.github.io/rustup/index.html

https://rust.godbolt.org/


https://ryanfaulhaber.com/posts/first-emacs-module-rust/

https://stackoverflow.com/questions/24664994/debugging-rust-with-gdb

https://stackoverflow.com/questions/37586216/step-by-step-interactive-debugger-for-rust

https://without.boats/blog/poll-next/

https://www.areweguiyet.com/

https://www.jntrnr.com/why-i-left-rust/

https://www.maturin.rs/

https://www.ncameron.org/blog/how-the-rls-works/

https://www.rust-lang.org/en-US/

https://zsiciarz.github.io/24daysofrust/index.html
