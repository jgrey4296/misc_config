# -*- mode: snippet -*-
# name: reminder.test.asserts
# uuid: reminder.test.asserts
# group: testing
# --
assertTrue(True)
assertAlmostEqual(self, first, second, places=None, msg=None, delta=None)
assertCountEqual(self, first, second, msg=None)
assertDictContainsSubset(self, subset, dictionary, msg=None)
assertDictEqual(self, d1, d2, msg=None)
assertEqual(self, first, second, msg=None)
assertFalse(self, expr, msg=None)
assertGreater(self, a, b, msg=None)
assertGreaterEqual(self, a, b, msg=None)
assertIn(self, member, container, msg=None)
assertIs(self, expr1, expr2, msg=None)
assertIsInstance(self, obj, cls, msg=None)
assertIsNone(self, obj, msg=None)
assertIsNot(self, expr1, expr2, msg=None)
assertIsNotNone(self, obj, msg=None)
assertLess(self, a, b, msg=None)
assertLessEqual(self, a, b, msg=None)
assertListEqual(self, list1, list2, msg=None)
assertLogs(self, logger=None, level=None)
assertMultiLineEqual(self, first, second, msg=None)
assertNotAlmostEqual(self, first, second, places=None, msg=None, delta=None)
assertNotEqual(self, first, second, msg=None)
assertNotIn(self, member, container, msg=None)
assertNotIsInstance(self, obj, cls, msg=None)
assertNotRegex(self, text, unexpected_regex, msg=None)
assertRaises(self, expected_exception, *args, **kwargs)
assertRaisesRegex(self, expected_exception, expected_regex, *args, **kwargs)
assertSequenceEqual(self, seq1, seq2, msg=None, seq_type=None)
assertSetEqual(self, set1, set2, msg=None)
assertTrue(self, expr, msg=None)
assertTupleEqual(self, tuple1, tuple2, msg=None)
assertWarns(self, expected_warning, *args, **kwargs)
assertAlmostEqual(self, first, second, places=None, msg=None, delta=None)
assertCountEqual(self, first, second, msg=None)