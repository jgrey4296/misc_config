# -*- mode: snippet -*-
# name: shuffle
# key: shuffle
# --
--from the haskell wiki
shuffle :: [a] -> StdGen -> ([a], StdGen)
shuffle xs gen = runST action
  where n = length xs
        toShuffle :: Int -> [a] -> ST s (STArray s Int a)
        toShuffle n' xs' = newListArray (1,n') xs'
        action = do
          g <- newSTRef gen
          let randomRST lohi = do
                (a, s') <- liftM (randomR lohi) (readSTRef g)
                writeSTRef g s'
                return a
          ar <- toShuffle n xs
          xs' <- forM [1..n] $ \i -> do
            j <- randomRST (i, n)
            vi <- readArray ar i
            vj <- readArray ar j
            writeArray ar j vi
            return vj
          gen' <- readSTRef g
          return (xs', gen')
