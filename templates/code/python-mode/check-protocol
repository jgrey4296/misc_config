# -*- mode: snippet -*-
# name  : check-protocol
# uuid  : check-protocol
# key   : check-protocol
# group :
# --
def check_protocol(cls):
    """ Decorator. Check the class implements all its methods / has no abstractmethods """

    abstracts = [x for x in dir(cls) if hasattr(getattr(cls, x), "__isabstractmethod__") and getattr(cls, x).__isabstractmethod__]
    if bool(abstracts):
        raise NotImplementedError(f"Class has Abstract Methods: {cls.__module__} : {cls.__name__} : {abstracts}")

    return cls
