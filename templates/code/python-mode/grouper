# -*- mode: snippet -*-
# name  : grouper
# uuid  : grouper
# key   : grouper
# group :
# --
def grouper(iterable, n, *, incomplete='fill', fillvalue=None):
    """Collect data into non-overlapping fixed-length chunks or blocks
    from https://docs.python.org/3/library/itertools.html
     grouper('ABCDEFG', 3, fillvalue='x') --> ABC DEF Gxx
     grouper('ABCDEFG', 3, incomplete='strict') --> ABC DEF ValueError
     grouper('ABCDEFG', 3, incomplete='ignore') --> ABC DEF
    """
    args = [iter(iterable)] * n
    if incomplete == 'fill':
        return zip_longest(*args, fillvalue=fillvalue)
    if incomplete == 'strict':
        return zip(*args, strict=True)
    if incomplete == 'ignore':
        return zip(*args)
    else:
        raise ValueError('Expected fill, strict, or ignore')