# -*- mode: snippet -*-
# name  : setup_logging
# uuid  : setup_logging
# key   : setup_logging
# group :
# --
def setup_logging(config:Tomler):
    file_log_level    = doot.config.on_fail("DEBUG", str).logging.file.level(wrapper=lambda x: logmod._nameToLevel.get(x, 0))
    file_log_format   = doot.config.on_fail("{levelname} : {pathname} : {lineno} : {funcName} : {message}", str).logging.file.format()
    file_filter_names = doot.config.on_fail([], list).logging.file.filters()

    file_handler.setLevel(file_log_level)
    file_handler.setFormatter(logmod.Formatter(file_log_format, style="{"))
    if bool(file_filter_names):
        file_handler.addFilter(DootAnyFilter(file_filter_names))

    stream_log_level    = doot.config.on_fail("DEBUG", str).logging.stream.level(wrapper=lambda x: logmod._nameToLevel.get(x, 0))
    stream_log_format   = doot.config.on_fail("{levelname} : {pathname} : {lineno} : {funcName} : {message}", str).logging.stream.format()
    stream_filter_names = doot.config.on_fail([], list).logging.stream.filters()

    stream_handler.setLevel(stream_log_level)
    stream_handler.setFormatter(logmod.Formatter(stream_log_format, style="{"))
    if bool(stream_filter_names):
        stream_handler.addFilter(DootAnyFilter(stream_filter_names))
