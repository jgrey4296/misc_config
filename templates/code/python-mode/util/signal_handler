# -*- mode: snippet -*-
# name  : signal.handler
# uuid  : signal.handler
# key   : signal.handler
# group : util
# --

import signal

class SignalHandler:
    """ Install a breakpoint to run on (by default) SIGINT """

    @staticmethod
    def handle(signum, frame):
        breakpoint()
        pass

    @staticmethod
    def install(sig=signal.SIGINT):
        logging.debug("Installing Task Loop handler for: %s", signal.strsignal(sig))
        # Install handler for Interrupt signal
        signal.signal(sig, SignalHandler.handle)

    @staticmethod
    def uninstall(sig=signal.SIGINT):
        logging.debug("Uninstalling Task Loop handler for: %s", signal.strsignal(sig))
        signal.signal(sig, signal.SIG_DFL)

    @staticmethod
    def __enter__():
        SignalHandler.install()
        return

    @staticmethod
    def __exit__(exc_type, exc_value, exc_traceback):
        SignalHandler.uninstall()
        # return False to reraise errors
        return
