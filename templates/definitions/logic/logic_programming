From cropper22_induc_logic_progr_at_74

- A *variable* is a string of characters starting with an uppercase letter, e.g. A, B, and C.
- A *function* symbol is a string of characters starting with a lowercase letter.
- A *predicate* symbol is a string of characters starting with a lowercase letter, e.g. job or happy. The arity n of a function or predicate symbol p is the number of arguments it takes and is denoted as p/n, e.g. happy/1, head/2, and append/3.
- A *constant* symbol is a function symbol with zero arity, e.g. alice or bob.
- A *term* is a variable, or a constant/function symbol of arity n immediately followed by a tuple of n terms.
- A term is *ground* if it contains no variables.
- An *atom* is a formula p(t1, . . . , tn), where p is a predicate symbol of arity n and each ti is a term, e.g. lego builder(alice), where lego builder is a predicate symbol of arity 1 and alice is a constant symbol.
- An atom is *ground* if all of its terms are ground, e.g. lego builder(alice) is ground but lego builder(A), where A is a variable, is not ground.
- The symbol *not* denotes negation as failure, where an atom is false if it cannot be proven true.
- A *literal* is an atom A (a positive literal) or its negation not A (a negative literal). For instance, lego builder(alice) is both an atom and a literal but not lego builder(alice) is only a literal because it includes the negation symbol not.
- A *clause* is of the form h1, ..., hn :- b1, ...,bm where each hi and bj is a literal and the symbol , denotes conjunction. The symbols hi are called the head of the clause. The symbols bi are called the body of the clause. We sometimes use the name rule instead of clause.
- A *Horn clause* is a clause with at most one positive literal.
- A *definite clause* is clause of the form h :- b1, b2, ..., bn, i.e. a clause with only one head literal, e.g. qsort(A,B):- empty(A),empty(B). Informally, a definite clause states that the head is true if the body is true, i.e. all of the body literals are proven true. For instance, the rule happy(A):- lego builder(A),enjoys lego(A) says that happy(A) is true when both lego builder(A) and enjoys lego(A) are true.
- A clause is *ground* if it contains no variables.
- A *clausal theory* is a set of clauses.
- A *goal* (also called a constraint) is a clause of the form :- b1, b2, ..., bn, i.e. a clause without a head, e.g. :- head(A,B),head(B,A).
- A *unit clause* is a clause with no body. For unit clauses, we usually omit the :- symbol, e.g. loves(alice,X).
- A *fact* is a ground unit clause loves(andrew,laura).
- A *substitution* is a clause with variables v1, . . . , vn simultaneously replaced with terms t1, . . . , tn and is denoted as θ = {v1/t1, . . . , vn/tn}. For instance, applying the substitution θ = {A/bob} to loves(alice,A) results in loves(alice,bob).
- A substitution *θ* unifies atoms A and B in the case Aθ = Bθ. Note that atoms A and B need to have a distinct set of variables, i.e., they should not have a variable with the same name, for unification to work properly.

(Procedural) Cut -
