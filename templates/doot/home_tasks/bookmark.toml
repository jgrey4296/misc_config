## bookmark.toml -*- mode: conf-toml -*-

[[locations]]
firefox   = "/home/john/snap/firefox/common/.mozilla/firefox"
bookmarks = "/media/john/data/github/bibliography/bookmarks/total.bookmarks"


[[tasks.bookmark]]
name                 = "update"
version              = "0.1"                # <str>
ctor                 = "task" # <type>
doc                  = ["after bookmarks have been loaded and put in the postbox", "merge them"] # <list[str]>
db_name              = "places.sqlite"
runs_after           = ["bookmark::_firefox", "bookmark::_archived"]
actions              = [
                     { do="getPost", from_task="bookmark::firefox", update_="head_firefox_bkmks" },
                     { do="getPost", from_task="bookmark::archived", update_="head_archived_bkmks" },
                     { do="dootle.bookmarks.actions:BookmarksMerge", from_=["{head_archived_bkmks}", "{head_firefox_bkmks}"], update_="total_bkmks" },                                                          # merge into {bookmarks}
                     { do="dootle.bookmarks.actions:BookmarksRemoveDuplicates", from_="{total_bkmks}" },
                     { do="dootle.bookmarks.actions:BookmarksToStr", from_="{total_bkmks}", update_="bkmks_str" },
                     { do="doot.actions.state:AddNow", format="%Y-%m-%d : %H:%M", update_="_date"},
                     { do="doot.actions.io:AppendAction", args=["* {_date}", "{bkmks_str}"], to="{temp}/append.test" },
                     { do="write!", from_="bkmks_str", to="{temp}/merged.bookmarks" },
                     { do="write!", from_="bkmks_str", to="{bookmarks}" },
]                                                                                                        # <list[Any]>

[[tasks.bookmark]]
name                 = "_firefox"
version              = "0.1"                # <str>
ctor                 = "task" # <type>
doc                  = [] # <list[str]>
db_name              = "places.sqlite"
actions              = [
                     { do="doot.actions.io:SimpleFind", from_="firefox", pattern_="db_name", rec=true, update_="db_locs"},
                     { do="delete!", args=["{temp}/{db_name}", "{temp}/{db_name}-shm", "{temp}/{db_name}-wal"], lax=true },
                     { do="copy", _from="{db_locs}", to="{temp}/" },                                                               # copy the db from {firefox}/../{db_name} -> {temp}
                     { do="dootle.bookmarks.actions:BookmarksPonyExtraction", _from="{temp}/{db_name}", update_="firefox_bkmks" },                        # extract
                     { do="putPost", args=["firefox_bkmks"] },
                     { do="delete!", args=["{temp}/{db_name}", "{temp}/{db_name}-shm", "{temp}/{db_name}-wal"], lax=true },
]                                                                                                        # <list[Any]>

[[tasks.bookmark]]
name                 = "_archived"
version              = "0.1"                # <str>
ctor                 = "task" # <type>
doc                  = [] # <list[str]>
db_name              = "places.sqlite"
actions              = [
                     { do="dootle.bookmarks.actions:BookmarksLoad", _from="{bookmarks}", update_="total_bkmks" },                # load {bookmarks}
                     { do="putPost", args=["total_bkmks"] },
]                                                                                                        # <list[Any]>


[[tasks.bookmark]]
name                 = "chore"
version              = "0.1"                # <str>
ctor                 = "doot.task.base_task:DootTask" # <type>
doc                  = [] # <list[str]>
db_name              = "places.sqlite"
actions              = [
                     # load {bookmarks}
                     # remove duplicates
                     # write to {bookmarks}
]                   # <list[Any]>
