[project]
name            = "$1"
version         = "0.0.1"
description     = ""
readme          = "README.md"
requires-python = ">=3.10"
license         = {file = "LICENSE"}
keywords        = []
authors         = [
  {email = "jgrey4296@gmail.com"},
  {name  = "J Grey"}
]
classifiers     = [
  "Programming Language :: Python"
]
urls = {
     homepage      = "https://github.com/jgrey4296/$1",
     documentation = "https://readthedocs.org/$1",
     repository    = "https://github.com/jgrey4296/$1",
     changelog     = "https://github.com/jgrey4296/$1/spam/blob/master/CHANGELOG.md",
}

##-- dependencies
dependencies   = []

[project.optional-dependencies]
test = [
  "pytest < 5.0.0",
]

##-- end dependencies

##-- entry points
[project.scripts] # CLI
# $1 = $1.default:main

[project.gui-scripts] #GUI
# spam-gui      = "spam:main_gui"

[project.entry-points."nothing"] # Plugins
# tomatoes      = "spam:main_tomatoes"

##-- end entry points

##-- build-system
[build-system]
# frontend: https://pypa-build.readthedocs.io/en/latest/index.html
# frontend: https://pdm.fming.dev/latest/
requires = [
         "setuptools",
         "wheel",
         # https://flit.pypa.io/en/stable/index.html
         # "flit_core > 3.2, <4",
         # https://pdm-backend.fming.dev/
         "pdm-backend"

]

build-backend = "setuptools.build_meta"
# build-backend = "flit_core.buildapi"
# build-backend = "pdm.backend"

[tool.setuptools]
# packages = ['$1']
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where = ["."]

[tool.setuptools.package-data]
$1 = []

[tool.setuptools.exclude-package-data]

##-- end build-system

# Tools #######################################################################

##-- pytest
[tool.pytest.ini_options]
log_cli       = false
log_level     = "DEBUG"
log_cli_level = "DEBUG"

##-- end pytest

##-- pyright
[tool.pyright]
verboseOutput               = true
typeCheckingMode            = "strict"
pythonVersion               = "3.10"

reportUnusedImport          = false
reportAssertAlwaysTrue      = "information"
reportMissingParameterType  = "warning"
reportMissingTypeArgument   = "warning"
reportMissingTypeStubs      = "warning"
reportUnknownMemberType     = "warning"
reportUnknownParameterType  = "information"
reportUnknownVariableType   = "warning"
reportUnnecessaryCast       = "information"
reportUnnecessaryIsInstance = "warning"

##-- end pyright
