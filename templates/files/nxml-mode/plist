<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>Label</key>
		<string>${1:com.example.app}</string>
        <!--<!---- program definition -->
		<key>Program</key>
		<string>${2:/Users/Me/Scripts/cleanup.sh}</string>
        <key>ProgramArguments</key>
        <array>
            <string>$2</string>
            <!-- <string>a val</string> -->
        </array>
        <!--<!---- end program definition -->

        <!--<!---- env -->
        <key>EnvironmentVariables</key>
        <dict>
            <!-- <key>PATH</key> <string>/bin:usr/bin</string> -->
        </dict>
        <!-- <key>WorkingDirectory</key> <string>/tmp</string> -->
        <!--<!---- end env -->

        <!--<!---- io -->
        <!-- <key>StandardInPath</key>    <string>/tmp/test.stdin</string> -->
        <!-- <key>StandardOutPath</key>   <string>/tmp/test.stdout</string> -->
        <!-- <key>StandardErrorPath</key> <string>/tmp/test.stderr</string> -->
        <!--<!---- end io -->

        <!--<!---- run control -->
		<key>RunAtLoad</key> <false/>
        <key>StartOnMount</key> <false/>
        <key>WatchPaths</key> <!-- run when path is modified -->
        <array>
	    <!--     <string>/path/to/directory_or_file</string> -->
        </array>
        <key>QueueDirectories</key> <!-- Run when directories aren't empty -->
        <array>
	        <!-- <string>/path/to/directory</string> -->
        </array>
        <key>StartCalendarInterval</key>
        <array>
	    <!-- <dict> <key>Hour</key> <integer>20</integer> <key>Minute</key> <integer>0</integer> </dict> -->
        </array>


        <!-- <key>KeepAlive</key> <false/> <!-\- no matter what -\-> -->
        <key>KeepAlive</key>
        <dict>
	        <key>SuccessfulExit</key> <false/>
            <key>Crashed</key>        <false/>
            <key>NetworkState</key>   <false/>
	        <!-- <key>PathState</key> <dict> <key>/tmp/runJob</key> <false/> </dict> -->
	        <!-- <key>OtherJobEnabled</key> <dict> <key>local.otherJob</key> <false/> </dict> -->
	        <!-- <key>AfterInitialDemand</key> <dict> <key>local.otherJob</key> <false/> </dict> -->
        </dict>
        <!--<!---- end run control -->

        <!--<!---- timing -->
        <!-- <key>StartInterval</key> <integer>3600</integer> -->
        <!-- <key>ExitTimeOut</key>   <integer>30</integer> -->
        <!-- <key>TimeOut</key>       <integer>30</integer> -->
        <key>ThrottleInterval</key>   <integer>30</integer> <!-- seconds -->
        <!--<!---- end timing -->
	</dict>
</plist>
<!-- User Agents 	~/Library/LaunchAgents 	Currently logged in user -->
<!-- Global Agents 	/Library/LaunchAgents 	Currently logged in user -->
<!-- Global Daemons /Library/LaunchDaemons 	root or the user specified with the key UserName -->
<!-- System Agents 	/System/Library/LaunchAgents 	Currently logged in user -->
<!-- System Daemons /System/Library/LaunchDaemons 	root or the user specified with the key UserName -->

<!-- Force an environment on startup: -->
<!-- https://stackoverflow.com/questions/36141784 -->
<!--   <string>sh</string> -->
<!--   <string>-c</string> -->
<!--   <string> -->
<!--     launchctl setenv JAVA_HOME /Library/Java/JavaVirtualMachines/jdk1.8.0_40.jdk/Contents/Home -->
<!--     launchctl setenv M2_HOME /Users/chrismanning/apache-maven-3.2.5 -->
<!--   </string> -->
<!-- </array> -->
<!-- <key>RunAtLoad</key> <true/> -->
