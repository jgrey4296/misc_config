# -*- mode: snippet -*-
# name: template.midi
# key: template.midi
# group: misc
# --
##-- imports
from __future__ import annotations

import abc
import logging as logmod
from copy import deepcopy
from dataclasses import InitVar, dataclass, field
from re import Pattern
from typing import (TYPE_CHECKING, Any, Callable, ClassVar, Final, Generic,
                    Iterable, Iterator, Mapping, Match, MutableMapping,
                    Protocol, Sequence, Tuple, TypeAlias, TypeGuard, TypeVar,
                    cast, final, overload, runtime_checkable)
from uuid import UUID, uuid1
from weakref import ref

from midiutil import MIDIFile
# https://midiutil.readthedocs.io/en/latest/

if TYPE_CHECKING:
    # tc only imports
    pass
##-- end imports

##-- consts
midi_file = MIDIFILE(1)
FILE_NAME = "$1"
degrees = [60, 62, 64, 65, 67, 69, 71, 72] #note num
track    = 0
channel  = 0
time     = 0 #beats
duration = 1 #beats
tempo    = 60 #bpm
volume   = 100 #0-127

##-- end consts

def main():
    midi_file.addTempo(track,time,tempo)

    for pitch in degrees:
        midi_file.addNote(track, channel, pitch, time,
                        duration, volume)
        time = time + 1

    #Export the file:
    with open(FILE_NAME,'wb') as f:
        midi_file.writeFile(f)

##-- main
if __name__ == "__main__":
   main()
##-- end main
