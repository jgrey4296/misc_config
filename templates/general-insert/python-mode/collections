Insert data structure:
collections.namedtuple          #
collections.deque               #
collections.ChainMap            #
collections.Counter             #
collections.OrderedDict         #
collections.defaultdict         #
collections.UserDict            #
collections.UserList            #
collections.UserString          #

collections.abc.Container       # __contains__
collections.abc.Hashable        # __hash__
collections.abc.Iterable        # __iter__
collections.abc.Iterator        # __next__
collections.abc.Reversible      # __reversed__
collections.abc.Generator       # send, throw
collections.abc.Sized           # __len__
collections.abc.Callable        # __call__
collections.abc.Collection      # __contains__, __iter__, __len__.
collections.abc.Sequence        # __getitem__, __len__
collections.abc.MutableSequence # __getitem__, __setitem__, __delitem__, __len__, insert
collections.abc.ByteString      # __getitem__, __len__
collections.abc.Set             # __contains__, __iter__, __len__
collections.abc.MutableSet      # __contains__, __iter__, __len__, add, discard
collections.abc.Mapping         # __getitem__, __iter__, __len__
collections.abc.MutableMapping  # __getitem__, __setitem__, _delitem__, __iter__, __len__
collections.abc.MappingView     #
collections.abc.ItemsView       #
collections.abc.KeysView        #
collections.abc.ValuesView      #
collections.abc.Awaitable       # __await__
collections.abc.Coroutine       # send, throw
collections.abc.AsyncIterable   # __aiter__
collections.abc.AsyncIterator   # __anext__
collections.abc.AsyncGenerator  # asend, athrow
