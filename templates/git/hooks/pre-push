#!/usr/bin/env python3
"""
This hook is called by git-push(1) and can be used to
prevent a push from taking place. The hook is called with
two parameters which provide the name and location of the
destination remote, if a named remote is not being used both
values will be the same.

Information about what is to be pushed is provided on the
hookâ€™s standard input with lines of the form:

    <local ref> SP <local object name> SP <remote ref> SP <remote object name> LF

For instance, if the command git push origin master:foreign
were run the hook would receive a line like the following:

    refs/heads/master 67890 refs/heads/foreign 12345

although the full object name would be supplied. If the
foreign ref does not yet exist the <remote object name> will
be the all-zeroes object name. If a ref is to be deleted,
the <local ref> will be supplied as (delete) and the <local
object name> will be the all-zeroes object name. If the
local commit was specified by something other than a name
which could be expanded (such as HEAD~, or an object name)
it will be supplied as it was originally given.

If this hook exits with a non-zero status, git push will
abort without pushing anything. Information about why the
push is rejected may be sent to the user by writing to
standard error.
"""
##-- imports
import argparse
import sys
import pathlib as pl
import re
##-- end imports

##-- argparse
parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,
                                 epilog = "\n".join([""]))
parser.add_argument('name')
parser.add_argument('loc')
##-- end argparse

##-- ifmain
if __name__ == "__main__":
    args = parser.parse_args()

##-- end ifmain
