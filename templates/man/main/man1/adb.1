.\" Automatically generated by Pandoc 2.12
.\"
.TH "" "" "" "" ""
.hy
.SH ADB \[en] Android Debug Bridge version 1.0.41
.PP
Version 31.0.3-7562133 Installed as
/Users/johngrey/Library/Android/sdk/platform-tools/adb
.SH GLOBAL OPTIONS
.PP
-a listen on all network interfaces, not just localhost
.PP
-d use USB device (error if multiple devices connected)
.PP
-e use TCP/IP device (error if multiple TCP/IP devices available)
.PP
-s SERIAL use device with given serial (overrides $ANDROID_SERIAL)
.PP
-t ID use device with given transport id
.PP
-H name of adb server host [default=localhost]
.PP
-P port of adb server [default=5037]
.PP
-L SOCKET listen on given socket for adb server
[default=tcp:localhost:5037]
.SH GENERAL COMMANDS
.PP
devices [-l] list connected devices (-l for long output)
.PP
help show this help message
.PP
version show version num
.SH NETWORKING
.PP
connect HOST[:PORT]
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ connect to a device via TCP/IP [default port=5555]
.PP
disconnect [HOST[:PORT]]
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ \ \ \ disconnect from given TCP/IP device [default
port=5555], or all
.PP
pair HOST[:PORT] [PAIRING CODE]
.PD 0
.P
.PD
\ \ \ \ \ pair with a device for secure TCP/IP communication
.PP
forward \[en]list
.PD 0
.P
.PD
\ \ \ \ \ \ \ \ list all forward socket connections
.PP
forward [\[en]no-rebind] LOCAL REMOTE
.PD 0
.P
.PD
\ \ \ \ forward socket connection using:
.PD 0
.P
.PD
\ \ \ \ \ \ tcp: ( may be \[lq]tcp:0\[rq] to pick any open port)
.PD 0
.P
.PD
\ \ \ \ \ \ localabstract:
.PD 0
.P
.PD
\ \ \ \ \ \ localreserved:
.PD 0
.P
.PD
\ \ \ \ \ \ localfilesystem:
.PD 0
.P
.PD
\ \ \ \ \ \ dev:
.PD 0
.P
.PD
\ \ \ \ \ \ jdwp: (remote only)
.PD 0
.P
.PD
\ \ \ \ \ \ vsock:: (remote only)
.PD 0
.P
.PD
\ \ \ \ \ \ acceptfd: (listen only)
.PP
forward \[en]remove LOCAL remove specific forward socket connection
.PP
forward \[en]remove-all remove all forward socket connections
.PP
ppp TTY [PARAMETER\&...] run PPP over USB
.PP
reverse \[en]list list all reverse socket connections from device
.PD 0
.P
.PD
reverse [\[en]no-rebind] REMOTE LOCAL
.PD 0
.P
.PD
\ \ \ \ reverse socket connection using:
.PD 0
.P
.PD
\ \ \ \ \ \ tcp: ( may be \[lq]tcp:0\[rq] to pick any open port)
.PD 0
.P
.PD
\ \ \ \ \ \ localabstract:
.PD 0
.P
.PD
\ \ \ \ \ \ localreserved:
.PD 0
.P
.PD
\ \ \ \ \ \ localfilesystem:
.PP
reverse \[en]remove REMOTE remove specific reverse socket connection
.PD 0
.P
.PD
reverse \[en]remove-all remove all reverse socket connections from
device
.PP
mdns check check if mdns discovery is available
.PD 0
.P
.PD
mdns services list all discovered services
.SH FILE TRANSFER
.PP
push [\[en]sync] [-z ALGORITHM] [-Z] LOCAL\&... REMOTE
.PD 0
.P
.PD
\ \ \ \ copy local files/directories to device
.PD 0
.P
.PD
\ \ \ \ \[en]sync: only push files that are newer on the host than the
device
.PD 0
.P
.PD
\ \ \ \ -n: dry run: push files to device without storing to the
filesystem
.PD 0
.P
.PD
\ \ \ \ -z: enable compression with a specified algorithm (any, none,
brotli)
.PD 0
.P
.PD
\ \ \ \ -Z: disable compression
.PP
pull [-a] [-z ALGORITHM] [-Z] REMOTE\&... LOCAL
.PD 0
.P
.PD
\ \ \ \ copy files/dirs from device
.PD 0
.P
.PD
\ \ \ \ -a: preserve file timestamp and mode
.PD 0
.P
.PD
\ \ \ \ -z: enable compression with a specified algorithm (any, none,
brotli)
.PD 0
.P
.PD
\ \ \ \ -Z: disable compression
.PP
sync [-l] [-z ALGORITHM] [-Z]
[all|data|odm|oem|product|system|system_ext|vendor]
.PD 0
.P
.PD
\ \ \ \ sync a local build from $ANDROID_PRODUCT_OUT to the device
(default all)
.PD 0
.P
.PD
\ \ \ \ -n: dry run: push files to device without storing to the
filesystem
.PD 0
.P
.PD
\ \ \ \ -l: list files that would be copied, but don\[cq]t copy them
.PD 0
.P
.PD
\ \ \ \ -z: enable compression with a specified algorithm (any, none,
brotli)
.PD 0
.P
.PD
\ \ \ \ -Z: disable compression
.SH SHELL:
.PP
shell [-e ESCAPE] [-n] [-Tt] [-x] [COMMAND\&...]
.PD 0
.P
.PD
\ \ \ \ run remote shell command (interactive shell if no command given)
.PD 0
.P
.PD
\ \ \ \ -e: choose escape character, or \[lq]none\[rq]; default `\[ti]'
.PD 0
.P
.PD
\ \ \ \ -n: don\[cq]t read from stdin
.PD 0
.P
.PD
\ \ \ \ -T: disable pty allocation
.PD 0
.P
.PD
\ \ \ \ -t: allocate a pty if on a tty (-tt: force pty allocation)
.PD 0
.P
.PD
\ \ \ \ -x: disable remote exit codes and stdout/stderr separation
.PP
emu COMMAND run emulator console command
.SH APP INSTALLATION
.PP
(see also \f[C]adb shell cmd package help\f[R]):
.PP
install [-lrtsdg] [\[en]instant] PACKAGE
.PD 0
.P
.PD
\ \ \ \ push a single package to the device and install it
.PP
install-multiple [-lrtsdpg] [\[en]instant] PACKAGE\&...
.PD 0
.P
.PD
\ \ \ \ push multiple APKs to the device for a single package and
install them
.PP
install-multi-package [-lrtsdpg] [\[en]instant] PACKAGE\&...
.PD 0
.P
.PD
\ \ \ \ push one or more packages to the device and install them
atomically
.PD 0
.P
.PD
\ \ \ \ -r: replace existing application
.PD 0
.P
.PD
\ \ \ \ -t: allow test packages
.PD 0
.P
.PD
\ \ \ \ -d: allow version code downgrade (debuggable packages only)
.PD 0
.P
.PD
\ \ \ \ -p: partial application install (install-multiple only)
.PD 0
.P
.PD
\ \ \ \ -g: grant all runtime permissions
.PD 0
.P
.PD
\ \ \ \ \[en]abi ABI: override platform\[cq]s default ABI
.PD 0
.P
.PD
\ \ \ \ \[en]instant: cause the app to be installed as an ephemeral
install app
.PD 0
.P
.PD
\ \ \ \ \[en]no-streaming: always push APK to device and invoke Package
Manager as separate steps
.PD 0
.P
.PD
\ \ \ \ \[en]streaming: force streaming APK directly into Package
Manager
.PD 0
.P
.PD
\ \ \ \ \[en]fastdeploy: use fast deploy
.PD 0
.P
.PD
\ \ \ \ \[en]no-fastdeploy: prevent use of fast deploy
.PD 0
.P
.PD
\ \ \ \ \[en]force-agent: force update of deployment agent when using
fast deploy
.PD 0
.P
.PD
\ \ \ \ \[en]date-check-agent: update deployment agent when local
version is newer and using fast deploy
.PD 0
.P
.PD
\ \ \ \ \[en]version-check-agent: update deployment agent when local
version has different version code and using fast deploy
.PD 0
.P
.PD
\ \ \ \ \[en]local-agent: locate agent files from local source build
(instead of SDK location)
.PD 0
.P
.PD
\ \ \ \ (See also \f[C]adb shell pm help\f[R] for more options.)
.PP
uninstall [-k] PACKAGE
.PD 0
.P
.PD
\ \ \ \ remove this app package from the device
.PD 0
.P
.PD
\ \ \ \ `-k': keep the data and cache directories
.SH DEBUGGING
.PP
bugreport [PATH]
.PD 0
.P
.PD
\ \ \ \ write bugreport to given PATH [default=bugreport.zip];
.PD 0
.P
.PD
\ \ \ \ if PATH is a directory, the bug report is saved in that
directory.
.PD 0
.P
.PD
\ \ \ \ devices that don\[cq]t support zipped bug reports output to
stdout.
.PP
jdwp list pids of processes hosting a JDWP transport
.PD 0
.P
.PD
logcat show device log (logcat \[en]help for more)
.SH SECURITY
.PP
disable-verity disable dm-verity checking on userdebug builds
.PD 0
.P
.PD
enable-verity re-enable dm-verity checking on userdebug builds
.PD 0
.P
.PD
keygen FILE generate adb public/private key; private key stored in FILE,
.SH SCRIPTING
.PP
wait-for[-TRANSPORT]-STATE\&...
.PD 0
.P
.PD
\ \ \ \ wait for device to be in a given state
.PD 0
.P
.PD
\ \ \ \ STATE: device, recovery, rescue, sideload, bootloader, or
disconnect
.PD 0
.P
.PD
\ \ \ \ TRANSPORT: usb, local, or any [default=any]
.PP
get-state print offline | bootloader | device
.PD 0
.P
.PD
get-serialno print
.PD 0
.P
.PD
get-devpath print
.PP
remount [-R]
.PD 0
.P
.PD
\ \ \ \ \ remount partitions read-write.
if a reboot is required, -R will
.PD 0
.P
.PD
\ \ \ \ \ will automatically reboot the device.
.PP
reboot [bootloader|recovery|sideload|sideload-auto-reboot]
.PD 0
.P
.PD
\ \ \ \ reboot the device; defaults to booting system image but
.PD 0
.P
.PD
\ \ \ \ supports bootloader and recovery too.
sideload reboots
.PD 0
.P
.PD
\ \ \ \ into recovery and automatically starts sideload mode,
.PD 0
.P
.PD
\ \ \ \ sideload-auto-reboot is the same but reboots after sideloading.
.PP
sideload OTAPACKAGE sideload the given full OTA package
.PD 0
.P
.PD
root restart adbd with root permissions
.PD 0
.P
.PD
unroot restart adbd without root permissions
.PD 0
.P
.PD
usb restart adbd listening on USB
.PD 0
.P
.PD
tcpip PORT restart adbd listening on TCP on PORT
.SH INTERNAL DEBUGGING
.PP
start-server ensure that there is a server running
.PD 0
.P
.PD
kill-server kill the server if it is running
.PD 0
.P
.PD
reconnect kick connection from host side to force reconnect
.PD 0
.P
.PD
reconnect device kick connection from device side to force reconnect
.PD 0
.P
.PD
reconnect offline reset offline/unauthorized devices to force reconnect
.SH USB
.PP
attach attach a detached USB device
.PD 0
.P
.PD
detach detach from a USB device to allow use by other processes
.SH ENVIRONMENT VARIABLES
.PP
$ADB_TRACE
.PD 0
.P
.PD
\ \ \ \ comma-separated list of debug info to log:
.PD 0
.P
.PD
\ \ \ \ all,adb,sockets,packets,rwx,usb,sync,sysdeps,transport,jdwp
.PD 0
.P
.PD
$ADB_VENDOR_KEYS colon-separated list of keys (files or directories)
.PD 0
.P
.PD
$ANDROID_SERIAL serial number to connect to (see -s)
.PD 0
.P
.PD
$ANDROID_LOG_TAGS tags to be used by logcat (see logcat \[en]help)
.PD 0
.P
.PD
$ADB_LOCAL_TRANSPORT_MAX_PORT max emulator scan port (default 5585, 16
emus)
.PD 0
.P
.PD
$ADB_MDNS_AUTO_CONNECT comma-separated list of mdns services to allow
auto-connect (default adb-tls-connect)
