%%
%% The 'Lord' institution from
%% @thesis{li14_normat_confl_detec_resol_cooper_instit_,
%%   author = {Li, TingTing},
%%   school = {University of Bath},
%%   title  = {Normative Conflict Detection and Resolution in Cooperating Institutions},
%%   year   = {2014},
%% }
%%

institution lord

type Person
type Age
type Gender
type Castle

exogenous event deadline
exogenous event demandToFight(Castle)
exogenous event goToWar(Castle)
exogenous event register(Person)
exogenous event releaseSolePolicy(Person)
exogenous event serveInArmy(Person)

inst event intDemandToFight(Castle)
inst event intRegister(Person)
inst event intReleaseSolePolicy(Person)
inst event intServeInArmy(Person)

violation event illegal(Person)

fluent ageOlder(Person, Age)
fluent attacked(Castle)
fluent gender(Person, Gender)
fluent onlySon(Person)

obligation fluent obl(serveInArmy(Person), deadline, illegal(Person), oneshot)

demandToFight(Castle)     generates intDemandToFight(Castle)
register(Person)          generates intRegister(Person)
releaseSolePolicy(Person) generates intReleaseSolePolicy(Person)
serveInArmy(Person)       generates intServeInArmy(Person)

intRegister(Person)          initiates obl(serveInArmy(Person), deadline, illegal(Person)), perm(serveInArmy(Person)) if ageOlder(Person, sixteen), gender(Person, male)
intDemandToFight(Castle)     initiates perm(goToWar(Castle)) if attacked(Castle)

intReleaseSolePolicy(Person) terminates obl(serveInArmy(Person), deadline, illegal(Person)), perm(serveInArmy(Person)) if onlySon(Person)

initially ageOlder(bob,sixteen)
initially ageOlder(tom,sixteen)
initially attacked(eastCastle)
initially gender(bob,male)
initially gender(tom,male)
initially onlySon(tom)
initially perm(deadline)
initially perm(demandToFight(Castle)), perm(intDemandToFight(Castle)), pow(intDemandToFight(Castle))
initially perm(register(Person)), pow(intRegister(Person)), perm(intRegister(Person))
initially perm(releaseSolePolicy(Person)), perm(intReleaseSolePolicy(Person)), pow(intReleaseSolePolicy(Person))
