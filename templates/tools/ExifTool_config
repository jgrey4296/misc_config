## -*- mode: cperl -*-

##-- intro
# File:         example.config
#
# Description:  Example user configuration file for Image::ExifTool
#
# Notes:        This example file shows how to define your own shortcuts and
#               add new EXIF, IPTC, XMP, PNG, MIE and Composite tags, as well
#               as how to specify preferred lenses for the LensID tag, and
#               define new file types and default ExifTool option values.
#
#               Note that unknown tags may be extracted even if they aren't
#               defined, but tags must be defined to be written.  Also note
#               that it is possible to override an existing tag definition
#               with a user-defined tag.
#
#               To activate this file, rename it to ".ExifTool_config" and
#               place it in your home directory or the exiftool application
#               directory.  (On Mac and some Windows systems this must be done
#               via the command line since the GUI's may not allow filenames to
#               begin with a dot.  Use the "rename" command in Windows or "mv"
#               on the Mac.)  This causes ExifTool to automatically load the
#               file when run.  Your home directory is determined by the first
#               defined of the following environment variables:
#
#                   1.  EXIFTOOL_HOME
#                   2.  HOME
#                   3.  HOMEDRIVE + HOMEPATH
#                   4.  (the current directory)
#
#               Alternatively, the -config option of the exiftool application
#               may be used to load a specific configuration file (note that
#               this must be the first option on the command line):
#
#                   exiftool -config example.config ...
#
#               This example file defines the following 16 new tags as well as
#               a number of Shortcut and Composite tags:
#
#                   1.  EXIF:NewEXIFTag
#                   2.  GPS:GPSPitch
#                   3.  GPS:GPSRoll
#                   4.  IPTC:NewIPTCTag
#                   5.  XMP-xmp:NewXMPxmpTag
#                   6.  XMP-exif:GPSPitch
#                   7.  XMP-exif:GPSRoll
#                   8.  XMP-xxx:NewXMPxxxTag1
#                   9.  XMP-xxx:NewXMPxxxTag2
#                  10.  XMP-xxx:NewXMPxxxTag3
#                  11.  XMP-xxx:NewXMPxxxStruct
#                  12.  PNG:NewPngTag1
#                  13.  PNG:NewPngTag2
#                  14.  PNG:NewPngTag3
#                  15.  MIE-Meta:NewMieTag1
#                  16.  MIE-Test:NewMieTag2
#
#               For detailed information on the definition of tag tables and
#               tag information hashes, see lib/Image/ExifTool/README.
#------------------------------------------------------------------------------
##-- end intro

##-- shortcuts
# Shortcut tags are used when extracting information to simplify
# commonly used commands.  They can be used to represent groups
# of tags, or to provide an alias for a tag name.
%Image::ExifTool::UserDefined::Shortcuts = (
    # MyShortcut => ['exif:createdate','exposuretime','aperture'],
    # MyAlias => 'FocalLengthIn35mmFormat',
    pdf => 'PDF:all',
    xmp => 'XMP:all',
);
##-- end shortcuts

##-- user tags
# NOTE: All tag names used in the following tables are case sensitive.
# The %Image::ExifTool::UserDefined hash defines new tags to be added
# to existing tables.
%Image::ExifTool::UserDefined = (
    ##-- exif
    # All EXIF tags are added to the Main table, and WriteGroup is used to
    # specify where the tag is written (default is ExifIFD if not specified):
    'Image::ExifTool::Exif::Main' => {
                                      # Example 1.  EXIF:NewEXIFTag
                                      0xd000 => {
                                                 Name => 'NewEXIFTag',
                                                 Writable => 'int16u',
                                                 WriteGroup => 'IFD0',
                                                },
                                     },
    ##-- end exif

    # new XMP namespaces (eg. xxx) must be added to the Main XMP table:
    'Image::ExifTool::XMP::Main' => {
        # namespace definition for examples 8 to 11
        bibtex => { # <-- must be the same as the NAMESPACE prefix
            SubDirectory => {
                TagTable => 'Image::ExifTool::UserDefined::bibtex',
                # (see the definition of this table below)
            },
        },
        # add more user-defined XMP namespaces here...
    },
);
##-- end user tags

##-- new namespace
# This is a basic example of the definition for a new XMP namespace.
# This table is referenced through a SubDirectory tag definition
# in the %Image::ExifTool::UserDefined definition above.
# The namespace prefix for these tags is 'xxx', which corresponds to
# an ExifTool family 1 group name of 'XMP-xxx'.
%Image::ExifTool::UserDefined::bibtex = (
    GROUPS => { 0 => 'XMP', 1 => 'XMP-bib', 2 => 'bibtex' },
    NAMESPACE => { 'bibtex' => 'http://www.bibtex.org/' },
    WRITABLE => 'string', # (default to string-type tags)
    BibtexFull => { Writable => 'string' },
    BibTags   => { List     => 'Bag'},

    Entry => {
        # the "Struct" entry defines the structure fields
        Struct => {
            # structure fields (very similar to tag definitions)
                   Key         => {},
                   Type        => {},
                   Title       => {},
                   Author      => {},
                   Editor      => {},
                   Journal     => {},
                   Booktitle   => {},
                   Institution => {},
                   School      => {},
                   Note        => {},
                   Publisher   => {},
                   Issn        => {},
                   Isbn        => {},
                   DOI         => {},
                   Url         => {},
                   Year        => { Writable => 'integer' },
        },
    },
);

##-- end new namespace

##-- custom file types
# User-defined file types to recognize
%Image::ExifTool::UserDefined::FileTypes = (
    XXX => { # <-- the extension of the new file type (case insensitive)
        # BaseType specifies the format upon which this file is based (case
        # sensitive).  If BaseType is defined, then the file will be fully
        # supported, and in this case the Magic pattern should not be defined
        BaseType => 'TIFF',
        MIMEType => 'image/x-xxx',
        Description => 'My XXX file type',
        # if the BaseType is writable by ExifTool, then the new file type
        # will also be writable unless otherwise specified, like this:
        Writable => 0,
    },
    YYY => {
        # without BaseType, the file will be recognized but not supported
        Magic => '0123abcd',    # regular expression to match at start of file
        MIMEType => 'application/test',
        Description => 'My YYY file type',
    },
    ZZZ => {
        # if neither BaseType nor Magic are defined, the file will be
        # recognized by extension only.  MIMEType will be application/unknown
        # unless otherwise specified
        Description => 'My ZZZ file type',
    },
    # if only BaseType is specified, then the following simplified syntax
    # may be used.  In this example, files with extension "TTT" will be
    # processed as JPEG files
    TTT => 'JPEG',
);

##-- end custom file types

##-- default options
# Specify default ExifTool option values
# (see the Options function documentation for available options)
%Image::ExifTool::UserDefined::Options = (
    CoordFormat => '%.6f',  # change default GPS coordinate format
    Duplicates => 1,        # make -a default for the exiftool app
    GeoMaxHDOP => 4,        # ignore GPS fixes with HDOP > 4
    RequestAll => 3,        # request additional tags not normally generated
);

##-- end default options

1;
#end
